-- User Auth Table for JWT Authentication
CREATE TABLE IF NOT EXISTS user_auth (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    email VARCHAR(100) NOT NULL,
    password_hash VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Main Users Table
CREATE TABLE IF NOT EXISTS users (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL,
    username VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    phone VARCHAR(50),
    website VARCHAR(100),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Addresses Table with Reference to Users
CREATE TABLE IF NOT EXISTS addresses (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    street VARCHAR(255),
    suite VARCHAR(100),
    city VARCHAR(100),
    zipcode VARCHAR(20),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_address_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
);

-- Geo Coordinates Table with Reference to Addresses
CREATE TABLE IF NOT EXISTS geo (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    address_id INT NOT NULL,
    lat VARCHAR(50),
    lng VARCHAR(50),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_geo_address FOREIGN KEY (address_id) REFERENCES addresses(id) ON DELETE CASCADE
);

-- Companies Table with Reference to Users
CREATE TABLE IF NOT EXISTS companies (
    id INT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id INT NOT NULL,
    name VARCHAR(255),
    catch_phrase VARCHAR(255),
    bs VARCHAR(255),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_company_user FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE
); 